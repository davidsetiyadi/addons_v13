import time
import math
import re

from odoo.osv import expression
from odoo.tools.float_utils import float_round as round, float_compare
from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT
from odoo.exceptions import UserError, ValidationError, RedirectWarning
from odoo import api, fields, models, _, tools
from odoo.tests.common import Form
PURCHASE = [('or','Or'),('and','And')]

class GbrFilterData(models.TransientModel):
	_name = 'gbr.filter.data'
	_description = 'Gbr Filter Data'
	#Filter data pembayaran hutang

	confirm_date = fields.Datetime(string='Confirm Date Awal')
	confirm_date_end = fields.Datetime(string='Confirm Date Akhir')
	input_date = fields.Datetime(string='Input Date Awal')
	input_date_end = fields.Datetime(string='Input Date Akhir')
	mod_date = fields.Datetime(string='Change Date Awal')
	mod_date_end = fields.Datetime(string='Change Date Akhir')
	confirm_id = fields.Many2one('res.users', string='Konf Oleh')
	input_id = fields.Many2one('res.users', string='Input Oleh')
	mod_id = fields.Many2one('res.users', string='Ubah Oleh')
	is_konf = fields.Boolean('Belum Konfirmasi')
	type = fields.Selection(PURCHASE, string="Type",default='and',required=True)

	def button_action_and(self):
		self.write({'type':'and'})
		# return True
		return {
			"type": "ir.actions.do_nothing",
		}

	def button_action_or(self):
		self.write({'type':'or'})
		return {
			"type": "ir.actions.do_nothing",
		}

	def button_process(self):
		# return ke form dengan filter yang sudha di buat tadi
		# return True
		domain = []
		if self.type == 'and':
			if self.confirm_date:
				domain.append(('confirm_date','>=',self.confirm_date))
			if self.confirm_date_end:
				domain.append(('confirm_date','<=',self.confirm_date_end))
			if self.input_date:
				domain.append(('create_date','>=',self.input_date))
			if self.input_date:
				domain.append(('create_date','<=',self.input_date_end))
			if self.mod_date:
				domain.append(('write_date','>=',self.mod_date))
			if self.mod_date_end:
				domain.append(('write_date','<=',self.mod_date_end))
			if self.confirm_id:
				domain.append(('confirm_id','=',self.confirm_id.id))
			if self.input_id:
				domain.append(('create_uid','=',self.input_id.id))
			if self.mod_id:
				domain.append(('write_uid','=',self.mod_id.id))
			if self.is_konf:
				domain.append(('confirm_id','=',False))
		else:
			#cek berapa bnyak yang aktif.
			n = 0
			if self.confirm_date:
				n += 1
			if self.confirm_date_end:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.input_date:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.input_date:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.mod_date:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.mod_date_end:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.confirm_id:		
				# print ('nnnnnnnnn',n)
				if n != 0:
					domain.append('|')
				n += 1
			if self.input_id:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.mod_id:				
				if n != 0:
					domain.append('|')
				n += 1
			if self.is_konf:
				if n != 0:
					domain.append('|')
				n += 1
			if self.confirm_date:
				domain.append(('confirm_date','>=',self.confirm_date))
			if self.confirm_date_end:
				domain.append(('confirm_date','<=',self.confirm_date_end))
			if self.input_date:
				domain.append(('create_date','>=',self.input_date))
			if self.input_date:
				domain.append(('create_date','<=',self.input_date_end))
			if self.mod_date:
				domain.append(('write_date','>=',self.mod_date))
			if self.mod_date_end:
				domain.append(('write_date','<=',self.mod_date_end))
			if self.confirm_id:
				domain.append(('confirm_id','=',self.confirm_id.id))
			if self.input_id:
				domain.append(('create_uid','=',self.input_id.id))
			if self.mod_id:
				domain.append(('write_uid','=',self.mod_id.id))
			if self.is_konf:
				domain.append(('confirm_id','=',False))

		# ['|',('payment_id', 'in', tuple(payment_ids) )]
		# domain = [('confirm_date', '>=',self.confirm_date)]
		return {
			'name': _('Pembayaran Hutang'),
			'view_mode': 'tree,form',
			'res_model': 'gbr.payment.voucher',
			'view_id': False,
			# 'target': 'new',
			'type': 'ir.actions.act_window',
			'domain': domain,
		}